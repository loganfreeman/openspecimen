<?xml version="1.0" encoding="UTF-8" ?>
<beans xmlns="http://www.springframework.org/schema/beans"
  xmlns:security="http://www.springframework.org/schema/security"
  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xmlns:context="http://www.springframework.org/schema/context"
  xsi:schemaLocation="http://www.springframework.org/schema/beans
    http://www.springframework.org/schema/beans/spring-beans-3.2.xsd
    http://www.springframework.org/schema/context
    http://www.springframework.org/schema/context/spring-context-3.2.xsd
    http://www.springframework.org/schema/security
    http://www.springframework.org/schema/security/spring-security-3.2.xsd">

  <!-- Enable auto-wiring -->
  <context:annotation-config/>

  <!-- Scan for auto-wiring classes in spring saml packages -->
  <!--<context:component-scan base-package="org.springframework.security.saml"/>-->
  <bean class="org.springframework.security.saml.SAMLBootstrap"/>

  <bean id="samlFilter" class="org.springframework.security.web.FilterChainProxy">
    <security:filter-chain-map path-type="ant">
      <security:filter-chain pattern="/saml/login/**" filters="samlEntryPoint"/>
      <security:filter-chain pattern="/saml/SSO/**" filters="samlWebSSOProcessingFilter"/>
      <security:filter-chain pattern="/saml/metadata/**" filters="metadataDisplayFilter"/>
    </security:filter-chain-map>
  </bean>

  <!-- Secured pages with SAML as entry point -->
  <security:http entry-point-ref="samlEntryPoint" use-expressions="false">
    <security:custom-filter before="FIRST" ref="metadataGeneratorFilter"/>
    <security:custom-filter after="BASIC_AUTH_FILTER" ref="samlFilter"/>
  </security:http>

  <bean id="samlEntryPoint" class="org.springframework.security.saml.SAMLEntryPoint">
    <property name="defaultProfileOptions">
      <bean class="org.springframework.security.saml.websso.WebSSOProfileOptions">
        <property name="includeScoping" value="false"/>
      </bean>
    </property>
  </bean>

  <bean id="webSSOprofile" class="org.springframework.security.saml.websso.WebSSOProfileImpl"/>

  <bean id="metadataGen" class="org.springframework.security.saml.metadata.MetadataGenerator">
    <property name="extendedMetadata">
      <bean class="org.springframework.security.saml.metadata.ExtendedMetadata">
        <property name="idpDiscoveryEnabled" value="true"/>
      </bean>
    </property>
  </bean>

  <bean id="metadataGeneratorFilter" class="org.springframework.security.saml.metadata.MetadataGeneratorFilter">
    <constructor-arg ref="metadataGen"/>
  </bean>

  <!-- The filter is waiting for connections on URL suffixed with filterSuffix and presents SP metadata there -->
  <bean id="metadataDisplayFilter" class="org.springframework.security.saml.metadata.MetadataDisplayFilter"/>

  <bean id="processor" class="org.springframework.security.saml.processor.SAMLProcessorImpl">
    <constructor-arg>
      <list>
        <ref bean="redirectBinding"/>
        <ref bean="postBinding"/>
        <ref bean="artifactBinding"/>
        <ref bean="soapBinding"/>
        <ref bean="paosBinding"/>
      </list>
    </constructor-arg>
  </bean>

  <bean id="redirectBinding" class="org.springframework.security.saml.processor.HTTPRedirectDeflateBinding">
    <constructor-arg ref="parserPool"/>
  </bean>

  <bean id="postBinding" class="org.springframework.security.saml.processor.HTTPPostBinding">
    <constructor-arg ref="parserPool"/>
    <constructor-arg ref="velocityEngine"/>
  </bean>

  <bean id="velocityEngine" class="org.springframework.security.saml.util.VelocityFactory" factory-method="getEngine"/>

  <bean id="artifactBinding" class="org.springframework.security.saml.processor.HTTPArtifactBinding">
    <constructor-arg ref="parserPool"/>
    <constructor-arg ref="velocityEngine"/>
    <constructor-arg>
      <bean class="org.springframework.security.saml.websso.ArtifactResolutionProfileImpl">
        <constructor-arg>
          <bean class="org.apache.commons.httpclient.HttpClient">
            <constructor-arg>
              <bean class="org.apache.commons.httpclient.MultiThreadedHttpConnectionManager"/>
            </constructor-arg>
          </bean>
        </constructor-arg>
        <property name="processor">
          <bean class="org.springframework.security.saml.processor.SAMLProcessorImpl">
            <constructor-arg ref="soapBinding"/>
          </bean>
        </property>
      </bean>
    </constructor-arg>
  </bean>

  <bean id="soapBinding" class="org.springframework.security.saml.processor.HTTPSOAP11Binding">
    <constructor-arg ref="parserPool"/>
  </bean>

  <bean id="paosBinding" class="org.springframework.security.saml.processor.HTTPPAOS11Binding">
    <constructor-arg ref="parserPool"/>
  </bean>

  <!-- IDP Metadata configuration - paths to metadata of IDPs in circle of trust is here -->
  <bean id="metadata" class="org.springframework.security.saml.metadata.CachingMetadataManager">
    <constructor-arg>
      <list>
        <!-- Example of classpath metadata with Extended Metadata -->
        <bean class="org.springframework.security.saml.metadata.ExtendedMetadataDelegate">
          <constructor-arg>
            <bean class="org.opensaml.saml2.metadata.provider.ResourceBackedMetadataProvider">
              <constructor-arg>
                <bean class="java.util.Timer"/>
              </constructor-arg>
              <constructor-arg>
                <bean class="org.opensaml.util.resource.ClasspathResource">
                  <constructor-arg value="/openspecimen_app_sp.xml"/>
                </bean>
              </constructor-arg>
              <property name="parserPool" ref="parserPool"/>
            </bean>
          </constructor-arg>

          <constructor-arg>
            <bean class="org.springframework.security.saml.metadata.ExtendedMetadata">
              <property name="local" value="true"/>
              <property name="securityProfile" value="metaiop"/>
              <property name="sslSecurityProfile" value="pkix"/>
              <property name="sslHostnameVerification" value="default"/>
              <property name="signMetadata" value="false"/>
              <property name="signingKey" value="apollo"/>
              <property name="encryptionKey" value="apollo"/>
              <property name="requireArtifactResolveSigned" value="false"/>
              <property name="requireLogoutRequestSigned" value="false"/>
              <property name="requireLogoutResponseSigned" value="false"/>
              <property name="idpDiscoveryEnabled" value="true"/>
              <property name="idpDiscoveryURL" value="http://localhost:9090/openspecimen/saml/discovery"/>
              <property name="idpDiscoveryResponseURL" value="http://localhost:9090/openspecimen/saml/login?disco=true"/>
            </bean>
          </constructor-arg>
        </bean>

        <bean class="org.opensaml.saml2.metadata.provider.HTTPMetadataProvider">
          <!-- URL containing the metadata -->
          <constructor-arg>
            <value type="java.lang.String">http://idp.ssocircle.com/idp-meta.xml</value>
          </constructor-arg>
          <!-- Timeout for metadata loading in ms -->
          <constructor-arg>
            <value type="int">15000</value>
          </constructor-arg>
          <property name="parserPool" ref="parserPool"/>
        </bean>
      </list>
    </constructor-arg>
  </bean>

  <bean id="parserPool" class="org.opensaml.xml.parse.StaticBasicParserPool" init-method="initialize">
    <property name="builderFeatures">
      <map>
        <entry key="http://apache.org/xml/features/dom/defer-node-expansion" value="false"/>
      </map>
    </property>
  </bean>

  <bean id="samlLogger" class="org.springframework.security.saml.log.SAMLDefaultLogger"/>

  <bean id="contextProvider" class="org.springframework.security.saml.context.SAMLContextProviderImpl"/>

  <bean id="parserPoolHolder" class="org.springframework.security.saml.parser.ParserPoolHolder"/>

  <bean id="webSSOprofileConsumer" class="org.springframework.security.saml.websso.WebSSOProfileConsumerImpl">
    <property name="responseSkew" value="120"/>
  </bean>

  <!-- SAML 2.0 Holder-of-Key WebSSO Assertion Consumer -->
  <bean id="hokWebSSOprofileConsumer" class="org.springframework.security.saml.websso.WebSSOProfileConsumerHoKImpl"/>


  <!-- SAML 2.0 Holder-of-Key Web SSO profile -->
  <bean id="hokWebSSOProfile" class="org.springframework.security.saml.websso.WebSSOProfileConsumerHoKImpl"/>

  <!-- SAML 2.0 ECP profile -->
  <bean id="ecpprofile" class="org.springframework.security.saml.websso.WebSSOProfileECPImpl"/>

  <bean id="samlAuthenticationProvider" class="org.springframework.security.saml.SAMLAuthenticationProvider"/>

  <bean id="samlWebSSOProcessingFilter" class="org.springframework.security.saml.SAMLProcessingFilter">
    <property name="authenticationManager" ref="authManager"/>
    <property name="authenticationSuccessHandler" ref="successRedirectHandler"/>
    <property name="authenticationFailureHandler" ref="failureRedirectHandler"/>
  </bean>

  <bean id="successRedirectHandler" class="com.krishagni.catissueplus.core.auth.OsSimpleUrlAuthenticationSuccessHandler">
    <property name="defaultTargetUrl" value="/"/>
    <property name="daoFactory" ref="biospecimenDaoFactory"/>
    <property name="userAuthService" ref="userAuthService"/>
  </bean>

  <bean id="failureRedirectHandler"
      class="org.springframework.security.web.authentication.SimpleUrlAuthenticationFailureHandler">
    <property name="useForward" value="true"/>
    <property name="defaultFailureUrl" value="/"/>
  </bean>

  <!-- Central storage of cryptographic keys -->
  <bean id="keyManager" class="org.springframework.security.saml.key.JKSKeyManager">
    <constructor-arg value="classpath:security/samlKeystore.jks"/>
    <constructor-arg type="java.lang.String" value="nalle123"/>
    <constructor-arg>
      <map>
        <entry key="apollo" value="nalle123"/>
      </map>
    </constructor-arg>
    <constructor-arg type="java.lang.String" value="apollo"/>
  </bean>
</beans>
